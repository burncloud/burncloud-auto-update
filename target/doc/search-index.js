var searchIndex = new Map(JSON.parse('[["burncloud_auto_update",{"t":"EEEECCCFONNNNNONNNNNONONNNNNNNNNNPPPPPPPPGIPNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNN","n":["AutoUpdater","UpdateConfig","UpdateError","UpdateResult","config","error","updater","UpdateConfig","bin_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","current_version","default","download_links","fmt","from","gitee_releases_url","github_owner","github_releases_url","github_repo","into","new","to_owned","try_from","try_into","","type_id","with_bin_name","with_current_version","with_github_repo","Configuration","Err","FileSystem","GitHub","Network","Ok","Permission","Unknown","UpdateError","UpdateResult","Version","as_fail","borrow","borrow_mut","fmt","","from","","","into","to_string","try_from","try_into","","type_id","AutoUpdater","borrow","borrow_mut","check_for_updates","clone","clone_into","clone_to_uninit","config","current_version","from","get_download_links","into","new","set_config","sync_check_for_updates","sync_update","to_owned","try_from","try_into","","type_id","update_with_fallback","with_default_config"],"q":[[0,"burncloud_auto_update"],[7,"burncloud_auto_update::config"],[33,"burncloud_auto_update::error"],[58,"burncloud_auto_update::updater"],[81,"alloc::string"],[82,"core::fmt"],[83,"core::convert"],[84,"core::result"],[85,"core::any"],[86,"failure"],[87,"self_update::errors"],[88,"anyhow"]],"i":"````````b000000000000000000000000AlBf111011``111111111111111`Bb000000000000000000000","f":"````````{bd}{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{{f{b}}}b}{{f{f{hc}}}j{}}{{fl}j}5{{}b}{{{f{b}}}{{n{dd}}}}{{{f{b}}{f{hA`}}}Ab}{cc{}}{{{f{b}}}d}:0:{{}c{}}{{cegi}b{{Ad{d}}}{{Ad{d}}}{{Ad{d}}}{{Ad{d}}}}{fc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}0{fAh}{{bc}b{{Ad{d}}}}0{{bce}b{{Ad{d}}}{{Ad{d}}}}```````````{f{{f{Aj}}}}{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{{f{Al}}{f{hA`}}}Ab}0{AnAl}>{B`Al}={fd};::9`54{{{f{Bb}}}{{Bf{Bd}}}}{{{f{Bb}}}Bb}{{f{f{hc}}}j{}}{{fl}j}{{{f{Bb}}}{{f{b}}}}{{{f{Bb}}}{{f{Bh}}}}{cc{}}{{{f{Bb}}}{{n{dd}}}}{{}c{}}{bBb}{{{f{hBb}}b}j}:{{{f{Bb}}}{{Bf{j}}}}{fc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}0{fAh}4{{}Bb}","D":"Eh","p":[[5,"UpdateConfig",7],[5,"String",81],[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[1,"u8"],[1,"tuple",null,null,1],[5,"Formatter",82],[8,"Result",82],[10,"Into",83,null,1],[6,"Result",84,null,1],[5,"TypeId",85],[10,"Fail",86],[6,"UpdateError",33],[6,"Error",87],[5,"Error",88],[5,"AutoUpdater",58],[1,"bool"],[8,"UpdateResult",33],[1,"str"]],"r":[[0,58],[1,7],[2,33],[3,33]],"b":[[47,"impl-Debug-for-UpdateError"],[48,"impl-Display-for-UpdateError"],[49,"impl-From%3CError%3E-for-UpdateError"],[51,"impl-From%3CError%3E-for-UpdateError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUACwABAAMACgAEABAAAAASAAAAGgAEAC0ABQA0AAAANgAEADwAAQA/AAIASwAEAA==","P":[[9,"T"],[11,""],[12,"T"],[13,""],[18,"T"],[19,""],[23,"U"],[24,""],[25,"T"],[26,"U,T"],[27,"U"],[29,""],[45,"T"],[47,""],[50,"T"],[51,""],[52,"U"],[53,""],[54,"U,T"],[55,"U"],[57,""],[59,"T"],[61,""],[63,"T"],[64,""],[67,"T"],[68,""],[69,"U"],[70,""],[74,"T"],[75,"U,T"],[76,"U"],[78,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3026]}